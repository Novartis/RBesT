# Generated by roxygen2: do not edit by hand

S3method("[[",betaBinomialMix)
S3method("[[",mix)
S3method(as.matrix,gMAP)
S3method(as.matrix,gMAPpred)
S3method(coef,gMAP)
S3method(decision1S_boundary,betaMix)
S3method(decision1S_boundary,default)
S3method(decision1S_boundary,gammaMix)
S3method(decision1S_boundary,normMix)
S3method(decision2S_boundary,betaMix)
S3method(decision2S_boundary,default)
S3method(decision2S_boundary,gammaMix)
S3method(decision2S_boundary,normMix)
S3method(dmix,betaBinomialMix)
S3method(dmix,betaMix)
S3method(dmix,default)
S3method(dmix,gammaMix)
S3method(dmix,gammaPoissonMix)
S3method(dmix,mvnormMix)
S3method(dmix,normMix)
S3method(ess,betaMix)
S3method(ess,default)
S3method(ess,gammaMix)
S3method(ess,normMix)
S3method(fitted,gMAP)
S3method(logLik,EM)
S3method(mixfit,array)
S3method(mixfit,default)
S3method(mixfit,gMAP)
S3method(mixfit,gMAPpred)
S3method(model.matrix,gMAP)
S3method(oc1S,betaMix)
S3method(oc1S,default)
S3method(oc1S,gammaMix)
S3method(oc1S,normMix)
S3method(oc2S,betaMix)
S3method(oc2S,default)
S3method(oc2S,gammaMix)
S3method(oc2S,normMix)
S3method(plot,EM)
S3method(plot,gMAP)
S3method(plot,mix)
S3method(plot,mvnormMix)
S3method(pmix,betaBinomialMix)
S3method(pmix,betaMix)
S3method(pmix,default)
S3method(pmix,gammaMix)
S3method(pmix,gammaPoissonMix)
S3method(pmix,mvnormMix)
S3method(pmix,normMix)
S3method(pos1S,betaMix)
S3method(pos1S,default)
S3method(pos1S,gammaMix)
S3method(pos1S,normMix)
S3method(pos2S,betaMix)
S3method(pos2S,default)
S3method(pos2S,gammaMix)
S3method(pos2S,normMix)
S3method(postmix,betaMix)
S3method(postmix,default)
S3method(postmix,gammaMix)
S3method(postmix,normMix)
S3method(preddist,betaMix)
S3method(preddist,default)
S3method(preddist,gammaMix)
S3method(preddist,mvnormMix)
S3method(preddist,normMix)
S3method(predict,gMAP)
S3method(print,EMbmm)
S3method(print,EMgmm)
S3method(print,EMmvnmm)
S3method(print,EMnmm)
S3method(print,betaBinomialMix)
S3method(print,betaMix)
S3method(print,decision1S)
S3method(print,decision2S)
S3method(print,dlink)
S3method(print,gMAP)
S3method(print,gMAPpred)
S3method(print,gMAPsummary)
S3method(print,gammaExpMix)
S3method(print,gammaMix)
S3method(print,gammaPoissonMix)
S3method(print,mix)
S3method(print,mvnormMix)
S3method(print,normMix)
S3method(qmix,betaBinomialMix)
S3method(qmix,betaMix)
S3method(qmix,default)
S3method(qmix,gammaMix)
S3method(qmix,gammaPoissonMix)
S3method(qmix,mvnormMix)
S3method(qmix,normMix)
S3method(rmix,betaBinomialMix)
S3method(rmix,betaMix)
S3method(rmix,default)
S3method(rmix,gammaMix)
S3method(rmix,gammaPoissonMix)
S3method(rmix,mvnormMix)
S3method(rmix,normMix)
S3method(robustify,betaMix)
S3method(robustify,default)
S3method(robustify,gammaMix)
S3method(robustify,normMix)
S3method(sigma,mvnormMix)
S3method(sigma,normMix)
S3method(summary,betaBinomialMix)
S3method(summary,betaMix)
S3method(summary,gMAP)
S3method(summary,gMAPpred)
S3method(summary,gammaMix)
S3method(summary,gammaPoissonMix)
S3method(summary,mvnormMix)
S3method(summary,normMix)
S3method(support,betaMix)
S3method(support,default)
S3method(support,gammaMix)
S3method(support,mvnormMix)
S3method(support,normMix)
export("likelihood<-")
export("sigma<-")
export(BinaryExactCI)
export(automixfit)
export(decision1S)
export(decision1S_boundary)
export(decision2S)
export(decision2S_boundary)
export(dmix)
export(dmixdiff)
export(ess)
export(forest_plot)
export(gMAP)
export(inv_logit)
export(likelihood)
export(logit)
export(mixbeta)
export(mixcombine)
export(mixfit)
export(mixgamma)
export(mixmvnorm)
export(mixnorm)
export(mixstanvar)
export(mn2beta)
export(mn2gamma)
export(mn2norm)
export(ms2beta)
export(ms2gamma)
export(msr2mvnorm)
export(oc1S)
export(oc1Sdecision)
export(oc2S)
export(oc2Sdecision)
export(pmix)
export(pmixdiff)
export(pos1S)
export(pos2S)
export(postmix)
export(preddist)
export(qmix)
export(qmixdiff)
export(read_mix_json)
export(rmix)
export(rmixdiff)
export(robustify)
export(sigma)
export(write_mix_json)
import(Formula)
import(Rcpp)
import(abind)
import(assertthat)
import(checkmate)
import(ggplot2)
import(methods)
import(mvtnorm)
import(rstantools)
import(stats)
importFrom(RcppParallel,CxxFlags)
importFrom(RcppParallel,RcppParallelLibs)
importFrom(jsonlite,fromJSON)
importFrom(jsonlite,toJSON)
importFrom(lifecycle,deprecated)
importFrom(matrixStats,colLogSumExps)
importFrom(matrixStats,colSums2)
importFrom(matrixStats,logSumExp)
importFrom(matrixStats,rowLogSumExps)
importFrom(matrixStats,rowMins)
importFrom(matrixStats,rowRanks)
importFrom(rlang,.data)
importFrom(rstan,extract)
importFrom(rstan,get_sampler_params)
importFrom(rstan,sampling)
importFrom(rstan,summary)
importFrom(stats, sigma)
importFrom(utils,capture.output)
importFrom(utils,modifyList)
useDynLib(RBesT, .registration = TRUE)
